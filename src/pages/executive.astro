---
import Layout from "../layouts/Layout.astro";
import Hero from "../components/Hero.astro";

import executive from '../images/executive.png'

const details = {
  title1: "Hire today",
  highlight: "the leaders",
  title2: "of tomorrow",
  p1: "At Blue Partners Executive, we leverage our extensive network of industry connections to identify high-caliber professionals who possess the skills, experience, and leadership qualities that can help our clients to achieve their strategic objectives and organizational goals.",
  p2: "At our core, we believe that building strong relationships with both our clients and candidates is essential to our success. Our dedicated team of consultants takes the time to understand each client's unique needs, culture, and goals to ensure that we find the right executive talent to drive their organization forward. Likewise, we work closely with candidates to understand their career aspirations and help them find the ideal role that aligns with their goals.",
  logo: executive
}

---

<Layout title="Blue Partners | Executive">
	<Hero details={details} />

  <div class="mx-auto bg-indigo-100">

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <div class="lg:text-center">

        <p
          class="mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl"
        >
          Interested? Let's talk!
        </p>

      </div>

    <form action="https://formspree.io/f/mbjeyrqg" method="POST" id="contact-form" class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <div class="flex flex-col space-y-4">
        <label for="name" class="font-medium">Your Name <span class="text-red-600">*</span></label>
        <input
          id="name"
          name="name"
          type="text"
          required
          placeholder="John Doe"
          class="rounded-lg border-gray-300 focus:border-blue-500 focus:ring focus:ring-blue-200 placeholder-gray-400 py-2 px-4 block w-full appearance-none leading-normal shadow"
        >

        <label for="email" class="font-medium">Your Company Email <span class="text-red-600">*</span></label>
        <input
          id="email"
          name="email"
          type="email"
          required
          placeholder="john@doe.com"
          class="rounded-lg border-gray-300 focus:border-blue-500 focus:ring focus:ring-blue-200 placeholder-gray-400 py-2 px-4 block w-full appearance-none leading-normal shadow"
        >

        <label for="company" class="font-medium">Your Company Name <span class="text-red-600">*</span></label>
        <input
          id="company"
          name="company"
          type="text"
          required
          placeholder="Doe Enterprises"
          class="rounded-lg border-gray-300 focus:border-blue-500 focus:ring focus:ring-blue-200 placeholder-gray-400 py-2 px-4 block w-full appearance-none leading-normal shadow"
        >

        <label for="location" class="font-medium">HQ Location <span class="text-red-600">*</span></label>
        <input
          id="location"
          name="location"
          type="text"
          required
          placeholder="Milan"
          class="rounded-lg border-gray-300 focus:border-blue-500 focus:ring focus:ring-blue-200 placeholder-gray-400 py-2 px-4 block w-full appearance-none leading-normal shadow"
        >

          <label for="services" class="font-medium">Which service can we help you with?</label>
        <div class=" space-y-2 grid grid-cols-1 gap-3 md:grid-cols-2">
          <label class="inline-flex items-center">
            <input type="checkbox" name="services[]" value="headhunting" class="rounded border-gray-300 text-blue-600 shadow focus:border-blue-500 focus:ring focus:ring-blue-200 focus:ring-opacity-50">
            <span class="ml-2 text-gray-700">Headhunting</span>
          </label>
          <label class="inline-flex items-center">
            <input type="checkbox" name="services[]" value="mapping" class="rounded border-gray-300 text-blue-600  focus:border-blue-500 focus:ring focus:ring-blue-200 focus:ring-opacity-50 shadow">
            <span class="ml-2 text-gray-700">Mapping</span>
          </label>
          <label class="inline-flex items-center">
            <input type="checkbox" name="services[]" value="RPO" class="rounded border-gray-300 text-blue-600 shadow focus:border-blue-500 focus:ring focus:ring-blue-200 focus:ring-opacity-50">
            <span class="ml-2 text-gray-700">RPO</span>
          </label>
          <label class="inline-flex items-center">
            <input type="checkbox" name="services[]" value="coaching" class="rounded border-gray-300 text-blue-600 shadow focus:border-blue-500 focus:ring focus:ring-blue-200 focus:ring-opacity-50">
            <span class="ml-2 text-gray-700">Coaching</span>
          </label>
        </div>

        <label class="block text-gray-700 font-bold mb-2" for="message">
          Add here any detail that could be useful!
        </label>
        <textarea
          class="resize-none w-full h-32 px-3 py-2 text-gray-700 border rounded-lg focus:border-blue-500 focus:ring focus:ring-blue-200 shadow"
          id="message" name="message"
          rows="5"
          placeholder="We are looking for a new CFO. Can you help us with your headhunting service?"
        ></textarea>

        <button
          type="submit"
          id="submit-button"
          class="bg-gradient-to-r from-indigo-800 to-fuchsia-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-1/4 mx-auto mt-4 shadow"
        >
          Submit
        </button>
      </div>
    </form>
  </div>
</Layout>

<script>
  // Get the form element
const form = document.querySelector('#contact-form');
const submitButton = document.querySelector('#submit-button')

// Listen for the form submit event
form.addEventListener('submit', async (e) => {
  // Prevent the default form submission behavior
  e.preventDefault();

  // Get the form data
  const formData = new FormData(form);

  try {
    // Send the form data to Formspree using fetch
    const response = await fetch(form.action, {
      method: 'POST',
      body: formData,
      headers: {
        'Accept': 'application/json'
      }
    });

    // Check if the response was successful
    if (response.ok) {
      // Display a custom success message under the form
      const successMessage = document.createElement('p');
      successMessage.textContent = 'Thank you for your message! We will get back to you soon.';
      submitButton.insertAdjacentElement('afterend', successMessage);

      // Reset the form fields
      form.reset();
    } else {
      // Display a custom error message under the form
      const errorMessage = document.createElement('p');
      errorMessage.textContent = 'Oops! Something went wrong. Please try again later.';
      submitButton.insertAdjacentElement('afterend', errorMessage);
    }
  } catch (error) {
    // Display a custom error message under the form
    const errorMessage = document.createElement('p');
    errorMessage.textContent = 'Oops! Something went wrong. Please try again later.';
    submitButton.insertAdjacentElement('afterend', errorMessage);
  }
});

</script>

